name: Java CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
    - uses: actions/checkout@v2
    - name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run Tests
      run: ./gradlew clean test
    - name: Run checkstyle
      run: ./gradlew check

  release:
    runs-on: ubuntu-latest
    needs: [test]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    if: github.ref == 'refs/heads/master'
    name: Release
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Semantic release
        run: npm i -g semantic-release && semantic-release
      - name: Update version constant
        run: |
          git fetch --tags
          fileName="./core/src/net/lapidist/colony/core/Constants.java"
          content=$(cat "$fileName")
          latestVersionTag=$(git describe --tags "$(git rev-list --tags --max-count=1)")
          echo "Updating Version To: $latestVersionTag"
          updatedContent=$(cat "$fileName" | sed "s/\${VERSION}/$latestVersionTag/g")
          echo "$updatedContent" > "$fileName"
      - name: Build client jar
        run: ./gradlew client:clean client:build client:jar -i
      - name: Build server jar
        run: ./gradlew server:clean server:build server:jar -i
      - name: Upload client build
        uses: Shopify/upload-to-release@v1.0.0
        with:
          name: Client
          path: client/build/libs/client.jar
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          content-type: application/zip
      - name: Upload server build
        uses: Shopify/upload-to-release@v1.0.0
        with:
          name: Server
          path: server/build/libs/server.jar
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          content-type: application/zip
